#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/aes.h>

#define AES_BLOCK_SIZE 16

void encrypt_file(char *in_file, char *out_file, char *key)
{
	AES_KEY aes_key;
	unsigned char iv[AES_BLOCK_SIZE];
	unsigned char buffer[1024];
	int bytes_read, bytes_written, i;
	FILE *in_fp, *out_fp;

	memset(iv, 0x00, AES_BLOCK_SIZE);

	if (AES_set_encrypt_key((unsigned char *) key, 128, &aes_key) < 0) {
	fprintf(stderr, "Error setting AES encryption key.\n");
	exit(1);
	}

	in_fp = fopen(in_file, "rb");
	if (in_fp == NULL) {
	fprintf(stderr, "Error opening input file.\n");
	exit(1);
	}

	out_fp = fopen(out_file, "wb");
	if (out_fp == NULL) {
	fprintf(stderr, "Error opening output file.\n");
	exit(1);
	}

	while ((bytes_read = fread(buffer, 1, 1024, in_fp)) > 0) {
	AES_cbc_encrypt(buffer, buffer, bytes_read, &aes_key, iv, AES_ENCRYPT);
	bytes_written = fwrite(buffer, 1, bytes_read, out_fp);
	if (bytes_written != bytes_read) {
	fprintf(stderr, "Error writing to output file.\n");
		exit(1);
	}
}

	fclose(in_fp);
	fclose(out_fp);
}

void decrypt_file(char *in_file, char *out_file, char *key)
{
	AES_KEY aes_key;
	unsigned char iv[AES_BLOCK_SIZE];
	unsigned char buffer[1024];
	int bytes_read, bytes_written, i;
	FILE *in_fp, *out_fp;

	memset(iv, 0x00, AES_BLOCK_SIZE);

	if (AES_set_decrypt_key((unsigned char *) key, 128, &aes_key) < 0) {
	fprintf(stderr, "Error setting AES decryption key.\n");
	exit(1);
    }

	in_fp = fopen(in_file, "rb");
	if (in_fp == NULL) {
	fprintf(stderr, "Error opening input file.\n");
	exit(1);
    }

	out_fp = fopen(out_file, "wb");
	if (out_fp == NULL) {
	fprintf(stderr, "Error opening output file.\n");
	exit(1);
    }

	while ((bytes_read = fread(buffer, 1, 1024, in_fp)) > 0) {
	AES_cbc_encrypt(buffer, buffer, bytes_read, &aes_key, iv, AES_DECRYPT);
	bytes_written = fwrite(buffer, 1, bytes_read, out_fp);
	if (bytes_written != bytes_read) {
	fprintf(stderr, "Error writing to output file.\n");
	exit(1);
        }
    }

	fclose(in_fp);
	fclose(out_fp);
}

int main(int argc, char *argv[])
{
	char *key = "my_password";
	char *in_file = "input.txt";
	char *encrypted_file = "encrypted.bin";
	char *decrypted_file = "decrypted.txt";

	encrypt_file(in_file, encrypted_file, key);
	decrypt_file(encrypted_file, decrypted_file, key);
	return 0;
}
